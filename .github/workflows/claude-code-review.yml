name: Claude コードレビュー

on:
  pull_request:
    types: [opened, synchronize]
    # オプション: 特定のファイル変更時のみ実行
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # オプション: PR作成者でフィルタリング
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Claude コードレビューを実行
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # オプション: モデルを指定（デフォルトはClaude Sonnet 4、Claude Opus 4を使用する場合はコメントを外す）
          model: "claude-opus-4-1-20250805"
          
          # 自動レビュー用の直接プロンプト（@claudeメンション不要）
          direct_prompt: |
            このプルリクエストをレビューして、以下の観点からフィードバックをお願いします：
            - コード品質とベストプラクティス
            - 潜在的なバグや問題
            - パフォーマンスの考慮事項
            - セキュリティ上の懸念
            - テストカバレッジ
            
            建設的で役立つフィードバックをお願いします。

          # オプション: スティッキーコメントを使用して、同じPRへの後続のプッシュで同じコメントを再利用
          # use_sticky_comment: true
          
          # オプション: ファイルタイプに基づいてレビューをカスタマイズ
          # direct_prompt: |
          #   このPRを以下の観点でレビュー：
          #   - TypeScriptファイル: 型安全性と適切なインターフェース使用
          #   - APIエンドポイント: セキュリティ、入力検証、エラーハンドリング
          #   - Reactコンポーネント: パフォーマンス、アクセシビリティ、ベストプラクティス
          #   - テスト: カバレッジ、エッジケース、テスト品質
          
          # オプション: 作成者に応じて異なるプロンプト
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'ようこそ！初回コントリビューターからのPRをレビューしてください。励ましの言葉と提案に対する詳細な説明を提供してください。' ||
          #   'コーディング規約とベストプラクティスに焦点を当てた徹底的なコードレビューをお願いします。' }}
          
          # オプション: テストやリンティングを実行するための特定のツールを追加
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"
          
          # オプション: 特定の条件でレビューをスキップ
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

